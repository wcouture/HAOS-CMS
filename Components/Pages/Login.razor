@page "/login"
@using HAOS.Models.User
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

<PageTitle>Login</PageTitle>

<div class="login-page">
    <h1>CMS Login</h1>
    <p class="error-message">@errorMessage</p>

    <div>
        <form class="login-form" @formname="loginForm" @onsubmit="OnLogin" method="post">
            <div class="form-group">
                <label for="username">Email</label>
                <input type="text" name="username" id="username" @bind-value="UserLogin!.Email" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" name="password" id="password" @bind-value="UserLogin!.Password"/>
            </div>
            <div class="form-group">
                <button type="submit">Login</button>
            </div>
        </form>
    </div>

</div>

@code {

    [Inject]
    public required ProtectedLocalStorage localStorage {get; set;}
    [Inject]
    public required IHttpClientFactory httpClientFactory {get; set;}
    [Inject]
    public required NavigationManager Navigation {get; set;}


    private string? errorMessage {get; set;}

    [SupplyParameterFromForm]
    public UserAccount? UserLogin {get; set;} = new();

    private async Task OnLogin() {
        errorMessage = "";

        var httpClient = httpClientFactory.CreateClient("api");
        var response = await httpClient.PostAsJsonAsync("/user/login", UserLogin);
        if (response.IsSuccessStatusCode) {
            var user = await response.Content.ReadFromJsonAsync<UserAccount>();
            if (user!.UserType == UserType.Admin) {
                await localStorage.SetAsync("user", UserLogin!.Email!);
                Navigation.NavigateTo("/");
            }
            else {
                errorMessage = "You are not an admin";
            }
            
        }
        else {
            errorMessage = "Invalid username or password";
        }
    }
}
